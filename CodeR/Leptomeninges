library(Seurat)
library(patchwork)
library(ggplot2)
library(RColorBrewer)
library(viridis)
library(DT)
library(dplyr)
library(SeuratObject)

###Leptomeninges
combinedLP <- readRDS("../input/combined_LP_Seurat_object_subset.rds")

combinedLP <- FindNeighbors(combinedLP, reduction = "pca", dims = 1:30)
combinedLP <- FindClusters(combinedLP, resolution = 0.8, verbose=T)
head(Idents(combinedLP), 5)
DimPlot(combinedLP, reduction = "umap", label = TRUE)


new.cluster.ids <- c("0", "1", "2", "2", "2", "2", "6", "7", "8", "9", "10", "1", "2", "13", "14", "15", "2", "1", "18", "19", "20", "21", "1", "23")
names(new.cluster.ids) <- levels(combinedLP)
combinedLP <- RenameIdents(combinedLP, new.cluster.ids)
DimPlot(combinedLP, reduction = "umap", label = TRUE, pt.size = 0.5)

combinedLP_RNA <- combinedLP
DefaultAssay(combinedLP_RNA) <- "RNA"

#split 15
cluster_split = c('15')
combinedLP$seurat_clusters = Idents(combinedLP)
combinedLP$refined_clusters = as.character(Idents(combinedLP)) # initialization; will be modified
for(cl in cluster_split) {
  
  sub=FindNeighbors(combinedLP[,Idents(combinedLP)==cl], reduction = "pca", dims = 1:30)
  sub_res=0.8
  sub=FindClusters(sub, resolution=sub_res)
  l = length(unique(sub$seurat_clusters))
  if(l == 1) {
    sub_res_low=sub_res
    while(l == 1) {
      sub_res = sub_res*2
      sub=FindClusters(sub, resolution=sub_res)
      l = length(unique(sub$seurat_clusters))
    }
    sub_res_high = sub_res
  } else if(l > 2) {
    sub_res_high=sub_res
    while(l > 2) {
      sub_res = sub_res/2
      sub=FindClusters(sub, resolution=sub_res)
      l = length(unique(sub$seurat_clusters))
    }
    sub_res_low = sub_res
  }
  while(l != 2) {
    sub_res = (sub_res_low + sub_res_high)/2
    sub=FindClusters(sub, resolution=sub_res)
    l = length(unique(sub$seurat_clusters))
    if(l == 1) sub_res_low = sub_res else sub_res_high = sub_res
  }
  # append sub-cluster ids:
  combinedLP$refined_clusters[colnames(sub)] = paste(combinedLP$refined_clusters[colnames(sub)], sub$seurat_clusters, sep='.')}

Idents(combinedLP) = 'refined_clusters'
DimPlot(object=combinedLP, reduction= 'umap', label=TRUE)
combinedLP_RNA <- combinedLP
DefaultAssay(combinedLP_RNA) <- "RNA"

#split 8
sub8 <- subset(x = combinedLP_RNA, idents = c("8"), invert = FALSE)
DimPlot(sub8, label = FALSE)
sub8 <- FindVariableFeatures(sub8, selection.method = "vst", nfeatures = 2000)

poscells <- WhichCells(sub8, expression = igic1s1 > 0)
sub8$igic1s1_status <- ifelse(colnames(sub8) %in% poscells, "igic1s1_POS", "igic1s1_NEG")
Idents(sub8) <- "igic1s1_status"
DimPlot(sub8, reduction = "umap", label = TRUE, pt.size = 0.5)
markers <- FindAllMarkers(sub8, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')
clustered_markers <- markers %>% group_by(cluster)
topN_markers <- clustered_markers %>% top_n(n = 30, wt = avg_log2FC)

new.cluster.ids <- c("5", "4")
names(new.cluster.ids) <- levels(sub8)
sub8 <- RenameIdents(sub8, new.cluster.ids)
DimPlot(sub8, reduction = "umap", label = TRUE, pt.size = 0.75)

combinedLP$sub8 <- as.character(Idents(combinedLP))
combinedLP$sub8[Cells(sub8)] <- paste(Idents(sub8))

Idents(combinedLP) <- "sub8"
DimPlot(combinedLP, reduction = "umap", label = TRUE, pt.size = 0.07)
markers <- FindAllMarkers(combinedLP, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')

combinedLP_RNA <- combinedLP
DefaultAssay(combinedLP_RNA) <- "RNA"

saveRDS(combinedLP, file="../output/LeptoFinal.rds")
combinedLP <- readRDS("../output/LeptoFinal.rds")

DimPlot(combinedLP, reduction = "umap", label = TRUE, pt.size = 0.07) + scale_color_manual(values = c("#5E5ED1", "#4EAAC6", "#C449AD", "#4B80E0", "#CF7DE2", "#6ACC2B", "#50C5D8", "#EDCE4F", "#A963DB", "#D8514E", "#5BD3B6", "#EAAD49", "#E5E565", "#A7DB45", "#7E59D1", "#5FC187", "#E57645", "#84244B"))

##Immune Dotplot
subsetImmune <- subset(x = combinedLP_RNA, idents = c("4", "5", "6"), invert = FALSE)
subsetImmune <- FindVariableFeatures(subsetImmune, selection.method = "vst", nfeatures = 2000)
DimPlot(subsetImmune, label = FALSE)
markers <- FindAllMarkers(subsetImmune, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')

CombinedOther <- subset(x = combinedLP_RNA, idents = c("2", "0", "13", "1", "10", "14", "21", "18", "7", "9", "15", "23", "19", "20"), invert = FALSE)
CombinedOther <- NormalizeData(CombinedOther, normalization.method = "LogNormalize", scale.factor = 100)
CombinedOther <- FindVariableFeatures(CombinedOther, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(CombinedOther), 10)
all.genes <- rownames(CombinedOther)
CombinedOther <- ScaleData(CombinedOther, features = all.genes)
CombinedOther <- RunPCA(CombinedOther, npcs = 30, features = VariableFeatures(object = CombinedOther))
CombinedOther <- RunUMAP(CombinedOther, dims = 1:30)
CombinedOther <- FindNeighbors(CombinedOther, reduction = "pca", dims = 1:30)
CombinedOther <- FindClusters(CombinedOther, resolution = c(0.000000000000000000000000000000000000001), verbose=T)
DimPlot(CombinedOther, label = FALSE)
markers <- FindAllMarkers(CombinedOther, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')
new.cluster.ids <- c("All Other Clusters")
names(new.cluster.ids) <- levels(CombinedOther)
CombinedOther <- RenameIdents(CombinedOther, new.cluster.ids)

all.combined <- merge(subsetImmune, y = CombinedOther, add.cell.ids = c("Other", "Immune"), project = "LCK")
markers <- FindAllMarkers(all.combined, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')

all.combined@active.ident <- factor(all.combined@active.ident, 
                                    levels=c(6, 5, 4, "All Other Clusters"))

featuresLepto <- c("c1qc","c1qb","grn1","lygl1","mpeg1.1","cmklr1","csf1ra","npsn","il6r","mmp13a","mmp9","sla2","il2rb","tcf7","tnfrsf9b","igic1s1","igl1c3","igl3v5","cd37")
Lym <- DotPlot(object = all.combined, features = featuresLepto)
Lym + theme(axis.text.x = element_text(size = 12, angle = 90),
            axis.text.y = element_text(size = 12, angle = 90), 
            legend.text = element_text(angle = 90),
            axis.title = element_text(angle=90),
            axis.title.y = element_text(angle = 90))

##EPD Dotplot
subsetEPDFibro <- subset(x = combinedLP_RNA, idents = c("9", "20"), invert = FALSE)
subsetEPDFibro <- FindVariableFeatures(subsetEPDFibro, selection.method = "vst", nfeatures = 2000)
DimPlot(subsetEPDFibro, label = FALSE)
markers <- FindAllMarkers(subsetEPDFibro, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')

CombinedOther <- subset(x = combinedLP_RNA, idents = c( "2", "0", "5", "13", "3", "1", "10", "14", "21", "18", "7", "15", "23", "19", "4", "6"), invert = FALSE)
CombinedOther <- NormalizeData(CombinedOther, normalization.method = "LogNormalize", scale.factor = 100)
CombinedOther <- FindVariableFeatures(CombinedOther, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(CombinedOther), 10)
all.genes <- rownames(CombinedOther)
CombinedOther <- ScaleData(CombinedOther, features = all.genes)
CombinedOther <- RunPCA(CombinedOther, npcs = 50, features = VariableFeatures(object = CombinedOther))
CombinedOther <- JackStraw(CombinedOther, num.replicate = 100, dims=65)
CombinedOther <- ScoreJackStraw(CombinedOther, dims = 1:65)
JackStrawPlot(CombinedOther, dims = 1:65)
CombinedOther <- RunUMAP(CombinedOther, dims = 1:48)
CombinedOther <- FindNeighbors(CombinedOther, reduction = "pca", dims = 1:48)
CombinedOther <- FindClusters(CombinedOther, resolution = c(0.000000000000000000000000000000000000000000000000000000000000000001), verbose=T)
DimPlot(CombinedOther, label = FALSE)
markers <- FindAllMarkers(CombinedOther, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')
new.cluster.ids <- c("All Other Clusters")
names(new.cluster.ids) <- levels(CombinedOther)
CombinedOther <- RenameIdents(CombinedOther, new.cluster.ids)

all.combined <- merge(subsetEPDFibro, y = CombinedOther, add.cell.ids = c("Other", "EPD_Fibro"), project = "LCK")
markers <- FindAllMarkers(all.combined, only.pos=T, min.pct=0.25, logfc.threshold=0.25, assay='RNA')

all.combined@active.ident <- factor(all.combined@active.ident, 
                                    levels=c(9, 20, "All Other Clusters"))

featuresEPD<- c("epd", "ggctb", "slc13a4", "c4", "cp", "vtnb", "slc47a2.1", "slc4a7", "slc5a6a", "slc16a5b", "slc16a9a", "tfr1a", "fxyd1", "fabp11a", "igfbp2a")
Lepto <- DotPlot(object = all.combined, features = featuresEPD, col.max = 2, scale =F) + scale_colour_gradient2(low = "#416DF2", mid = "#C1ABF4", high = "#E43847", midpoint = 4)
Lepto + theme(axis.text.x = element_text(size = 12, angle = 90),
              axis.text.y = element_text(size = 12, angle = 90), 
              legend.text = element_text(angle = 90),
              axis.title = element_text(angle=90),
              axis.title.y = element_text(angle = 90))
